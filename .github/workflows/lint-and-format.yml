name: Lint and Format Check

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  format-check:
    runs-on: ubuntu-latest
    name: Format Check

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Cache root dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-root-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-root-

      - name: Cache mobile dependencies
        uses: actions/cache@v4
        with:
          path: mobile/node_modules
          key: ${{ runner.os }}-bun-mobile-${{ hashFiles('mobile/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-mobile-

      - name: Install dependencies
        run: bun install

      - name: Install mobile dependencies
        run: |
          cd mobile
          bun install

      - name: Check root Prettier formatting
        run: bun run format:check

      - name: Check mobile Prettier formatting
        run: |
          cd mobile
          bun run format:check

  lint-check:
    runs-on: ubuntu-latest
    name: Lint Check

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Cache root dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-root-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-root-

      - name: Cache mobile dependencies
        uses: actions/cache@v4
        with:
          path: mobile/node_modules
          key: ${{ runner.os }}-bun-mobile-${{ hashFiles('mobile/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-mobile-

      - name: Install dependencies
        run: bun install

      - name: Install mobile dependencies
        run: |
          cd mobile
          bun install

      - name: Run root ESLint
        run: bun run lint

      - name: Run mobile ESLint
        run: |
          cd mobile
          bunx eslint .

  type-check:
    runs-on: ubuntu-latest
    name: Type Check

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Cache root dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-root-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-root-

      - name: Cache mobile dependencies
        uses: actions/cache@v4
        with:
          path: mobile/node_modules
          key: ${{ runner.os }}-bun-mobile-${{ hashFiles('mobile/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-mobile-

      - name: Install dependencies
        run: bun install

      - name: Install mobile dependencies
        run: |
          cd mobile
          bun install

      - name: Run root TypeScript check
        run: bunx tsc --noEmit --skipLibCheck

      - name: Run mobile TypeScript check
        run: |
          cd mobile
          bunx tsc --noEmit --skipLibCheck